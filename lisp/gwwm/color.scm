(define-module (gwwm color)
  #:use-module (oop goops)
  #:use-module (system foreign)
  #:export (make-color color->pointer))

(define-class <color> ())
(define-class <rgba-color> (<color>)
  (r #:init-keyword #:r #:accessor color-r)
  (g #:init-keyword #:g #:accessor color-g)
  (b #:init-keyword #:b #:accessor color-b)
  (a #:init-value 1.0 #:init-keyword #:a #:accessor color-a))
;; (define-method (initialize <color> initargs)
;;   (apply next-method initargs))
(define-method (make-color r g b)
  (make <rgba-color> #:r r #:g g #:b b #:a 1))
(define-method (make-color r g b a)
  (make <rgba-color> #:r r #:g g #:b b #:a a))
(define-method (color->pointer (color <rgba-color>))
  (make-c-struct (list float float float float)
                 (list (color-r color)
                       (color-g color)
                       (color-b color)
                       (color-a color))))

(define-method (write (color <rgba-color>) port)
  (format port "<rgba-color r: ~a g: ~a b: ~a a: ~a>"
          (color-r color)
          (color-g color)
          (color-b color)
          (color-a color)))
